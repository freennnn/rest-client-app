{
  "MainPage": {
    "title": "Добро пожаловать",
    "welcomeBack": "С возвращением, {name}!",
    "userName": "Пользователь",
    "signIn": "Войти",
    "signUp": "Регистрация",
    "projectOverviewTitle": "Обзор проекта",
    "projectOverviewDesc": "REST Client — это комплексное веб-приложение, предназначенное для упрощения взаимодействия с API. Этот инструмент позволяет разработчикам эффективно создавать, тестировать и управлять запросами RESTful API, повышая производительность.",
    "keyFeaturesTitle": "Ключевые особенности",
    "keyFeaturesApiSupportTitle": "Поддержка API",
    "keyFeaturesApiSupportDesc": "Беспрепятственное взаимодействие с RESTful API.",
    "keyFeaturesReqConstTitle": "Конструктор запросов",
    "keyFeaturesReqConstMethodLabel": "Выбор метода",
    "keyFeaturesReqConstMethodDesc": "Выбор стандартных методов HTTP (GET, POST, PUT, DELETE и т. д.).",
    "keyFeaturesReqConstEndpointLabel": "Ввод конечной точки",
    "keyFeaturesReqConstEndpointDesc": "Указание целевой конечной точки API с проверкой в реальном времени.",
    "keyFeaturesReqConstHeadersLabel": "Конфигурация заголовков",
    "keyFeaturesReqConstHeadersDesc": "Добавление, изменение или удаление заголовков запроса.",
    "keyFeaturesReqConstBodyLabel": "Редактор тела запроса",
    "keyFeaturesReqConstBodyDesc": "Создание полезной нагрузки запроса с поддержкой форматов JSON и обычного текста, с подсветкой синтаксиса и инструментами форматирования.",
    "keyFeaturesVarsTitle": "Редактор переменных",
    "keyFeaturesVarsDesc": "Определение и управление переменными для динамического конструирования запросов.",
    "keyFeaturesRespVisTitle": "Визуализация ответа",
    "keyFeaturesRespVisStatusLabel": "Отображение статуса",
    "keyFeaturesRespVisStatusDesc": "Четкое отображение кодов и статусов ответа HTTP.",
    "keyFeaturesRespVisFormatLabel": "Форматированный вывод",
    "keyFeaturesRespVisFormatDesc": "Просмотр тела ответа в структурированном, читаемом формате с подсветкой синтаксиса.",
    "keyFeaturesHistoryTitle": "История запросов",
    "keyFeaturesHistoryStorageLabel": "Постоянное хранилище",
    "keyFeaturesHistoryStorageDesc": "Автоматическое сохранение выполненных запросов локально для будущего использования.",
    "keyFeaturesHistoryMgmtLabel": "Управление запросами",
    "keyFeaturesHistoryMgmtDesc": "Просмотр, поиск и повторное выполнение прошлых запросов.",
    "techSpecTitle": "Технические характеристики",
    "techSpecFrameworksLabel": "Фреймворки и библиотеки",
    "techSpecFrameworksValue": "React 19, Next.js, TypeScript, Supabase, Tailwind CSS, Shadcn UI.",
    "techSpecAuthLabel": "Аутентификация и авторизация",
    "techSpecAuthValue": "Интеграция с Supabase, Защищенные маршруты.",
    "techSpecRoutingLabel": "Стратегия маршрутизации",
    "techSpecRoutingValue": "Кодирует детали запроса в URL.",
    "techSpecErrorHandlingLabel": "Обработка ошибок",
    "techSpecErrorHandlingValue": "Удобные уведомления, Отображение ответов HTTP-ошибок.",
    "techSpecI18nLabel": "Интернационализация (i18n)",
    "techSpecI18nValue": "Поддержка нескольких языков через переключатель в заголовке.",
    "techSpecResponsiveLabel": "Адаптивный дизайн",
    "techSpecResponsiveValue": "Обеспечивает удобство использования на разных устройствах.",
    "techSpecDevPracticesLabel": "Практики разработки",
    "techSpecDevPracticesValue": "Тестирование, ESLint, Prettier, хуки Husky.",
    "techSpecDeploymentLabel": "Развертывание",
    "techSpecDeploymentValue": "Размещено на Vercel.",
    "conclusionTitle": "Заключение",
    "conclusionDesc": "Этот проект предоставляет надежную и удобную среду для разработки и тестирования RESTful API. Его обширный набор функций в сочетании с лучшими практиками разработки и дизайна делает его ценным инструментом для разработчиков."
  },
  "Header": {
    "main": "Главная",
    "signIn": "Войти",
    "signUp": "Регистрация",
    "loadingLocale": "Загрузка..."
  },
  "auth": {
    "signIn": "Войти",
    "signUp": "Регистрация",
    "signOut": "Выйти",
    "email": "Электронная почта",
    "password": "Пароль",
    "validation": {
      "emailInvalid": "Пожалуйста, введите корректный email",
      "passwordMinLength": "Пароль должен содержать минимум 8 символов",
      "passwordLetter": "Пароль должен содержать хотя бы одну букву",
      "passwordDigit": "Пароль должен содержать хотя бы одну цифру",
      "passwordSpecial": "Пароль должен содержать хотя бы один специальный символ",
      "nameRequired": "Имя обязательно",
      "nameMinLength": "Имя должно содержать минимум 2 символа",
      "passwordConfirm": "Пароли не совпадают"
    },
    "loginTitle": "Добро пожаловать",
    "loginDescription": "Введите свои данные для входа в аккаунт",
    "emailLabel": "Электронная почта",
    "emailPlaceholder": "Введите ваш email",
    "passwordLabel": "Пароль",
    "forgotPassword": "Забыли пароль?",
    "loginSuccessTitle": "Вход выполнен успешно",
    "loginSuccessDescription": "Вы успешно вошли в систему",
    "loginErrorTitle": "Ошибка входа",
    "signInFailedCredentials": "Неверные учетные данные. Пожалуйста, проверьте ваш email и пароль.",
    "signInFailedGeneric": "Ошибка входа. Пожалуйста, попробуйте позже.",
    "loggingIn": "Вход в систему...",
    "noAccount": "Нет аккаунта?",
    "signUpTitle": "Создание аккаунта",
    "signUpDescription": "Введите свои данные для создания аккаунта",
    "nameLabel": "Имя",
    "namePlaceholder": "Введите ваше имя",
    "confirmPasswordLabel": "Подтверждение пароля",
    "confirmPasswordPlaceholder": "Подтвердите ваш пароль",
    "signUpSuccessTitle": "Аккаунт создан",
    "signUpSuccessDescription": "Ваш аккаунт успешно создан",
    "signUpErrorTitle": "Ошибка регистрации",
    "signUpFailedGeneric": "Ошибка регистрации. Пожалуйста, попробуйте позже.",
    "signingUp": "Создание аккаунта...",
    "haveAccount": "Уже есть аккаунт?",
    "errors": {
      "noToken": "Отсутствует или неверный токен подтверждения"
    },
    "signOutErrorTitle": "Ошибка выхода",
    "signOutErrorDescription": "Не удалось выйти. Пожалуйста, попробуйте еще раз.",
    "signingOut": "Выход...",
    "signOutSuccessTitle": "Вы успешно вышли из системы",
    "signInWithGithub": "Войти через GitHub",
    "emailRequired": "Требуется адрес электронной почты",
    "invalidEmail": "Неверный адрес электронной почты",
    "passwordRequired": "Требуется пароль",
    "passwordMinLength": "Пароль должен содержать не менее 6 символов",
    "confirmPasswordRequired": "Требуется подтверждение пароля",
    "passwordsDoNotMatch": "Пароли не совпадают",
    "nameRequired": "Требуется полное имя",
    "genericError": "Произошла непредвиденная ошибка. Пожалуйста, попробуйте еще раз.",
    "confirmEmailTitle": "Подтвердите ваш адрес электронной почты",
    "confirmEmailDescription": "Спасибо за регистрацию! Пожалуйста, проверьте вашу почту ({email}), чтобы подтвердить аккаунт.",
    "confirmingEmail": "Подтверждение вашего адреса электронной почты...",
    "emailConfirmed": "Адрес электронной почты успешно подтвержден!",
    "emailConfirmationFailed": "Не удалось подтвердить адрес электронной почты.",
    "noTokenHashOrType": "Неверная ссылка подтверждения: Отсутствует хэш токена или тип.",
    "tokenExpired": "Срок действия ссылки подтверждения истек. Пожалуйста, зарегистрируйтесь снова.",
    "invalidToken": "Неверный токен подтверждения.",
    "userAlreadyExistTitle": "Пользователь уже существует",
    "userAlreadyExistDescription": "Пожалуйста, войдите в систему."
  },
  "header": {
    "title": "REST Клиент",
    "nav": {
      "home": "Главная",
      "signIn": "Вход",
      "signUp": "Регистрация",
      "restClient": "REST Клиент",
      "variables": "Переменные",
      "history": "История",
      "signOut": "Выход"
    },
    "language": {
      "en": "Английский",
      "ru": "Русский"
    }
  },
  "error": {
    "title": "Ошибка аутентификации",
    "withError": "Произошла ошибка: {error}",
    "withoutError": "Произошла непредвиденная ошибка аутентификации."
  },
  "NotFoundPage": {
    "title": "Страница не найдена",
    "description": "Извините, страница, которую вы ищете, не существует.",
    "backToHome": "Вернуться на главную",
    "metadataTitle": "404 - Страница не найдена"
  },
  "ErrorPage": {
    "title": "Что-то пошло не так!",
    "description": "Произошла непредвиденная ошибка.",
    "tryAgain": "Попробовать снова",
    "backToHome": "Вернуться на главную"
  },
  "RestClientPage": {
    "title": "REST-клиент",
    "variablesNotification": "Используются переменные! Финальные значения будут подставлены перед отправкой.",
    "invalidJsonError": "Неверный формат JSON. Невозможно отформатировать.",
    "unknownError": "Произошла неизвестная ошибка"
  },
  "RequestForm": {
    "headersLabel": "Заголовки",
    "addHeaderButton": "Добавить заголовок",
    "keyPlaceholder": "Ключ",
    "valuePlaceholder": "Значение",
    "removeButton": "Удалить",
    "noHeaders": "Заголовки не добавлены",
    "codeLabel": "Код",
    "generatingCode": "Генерация кода...",
    "bodyLabel": "Тело запроса",
    "prettifyButton": "Форматировать",
    "bodyPlaceholderText": "Введите тело запроса...",
    "sendButton": "Отправить",
    "sendingButton": "Отправка..."
  },
  "ResponseDisplay": {
    "title": "Ответ",
    "statusLabel": "Статус:",
    "timeLabel": "Время:",
    "sizeLabel": "Размер:",
    "noResponsePlaceholder": "Ответ появится здесь после отправки запроса"
  },
  "CodeGenerator": {
    "enterUrl": "Пожалуйста, введите URL для генерации кода",
    "error": "Ошибка генерации кода. Пожалуйста, попробуйте еще раз."
  },
  "Notifications": {
    "networkErrorPrefix": "Сетевая ошибка: ",
    "encodingErrorPrefix": "Ошибка кодирования URL: ",
    "unknownError": "Произошла неизвестная ошибка",
    "loadHistoryError": "Не удалось загрузить историю из хранилища.",
    "createHistoryLinkError": "Не удалось создать ссылку для элемента истории.",
    "authCheckError": "Не удалось проверить статус аутентификации.",
    "loadVariablesError": "Не удалось загрузить переменные из локального хранилища.",
    "invalidJsonError": "Неверный формат JSON. Невозможно отформатировать."
  },
  "VariablesPage": {
    "unauthenticatedMessage": "Пожалуйста, войдите, чтобы получить доступ к переменным.",
    "title": "Переменные REST-клиента",
    "description": "Создавайте переменные для использования в запросах с синтаксисом '{{'variableName'}}'",
    "loadingFallback": "Загрузка редактора переменных..."
  },
  "VariablesEditor": {
    "statusSaving": "Сохранение изменений...",
    "statusSaved": "Изменения успешно сохранены",
    "statusError": "Ошибка сохранения изменений",
    "yourVariablesTitle": "Ваши переменные",
    "noVariablesPlaceholder": "Переменные еще не определены. Создайте одну ниже.",
    "deleteButton": "Удалить",
    "addNewTitle": "Добавить новую переменную",
    "nameLabel": "Имя переменной",
    "namePlaceholder": "API_KEY",
    "valueLabel": "Значение",
    "valuePlaceholder": "значение-вашего-api-ключа",
    "addButton": "Добавить переменную",
    "usageTitle": "Как использовать переменные",
    "usageIntro": "Переменные можно использовать в:",
    "usageUrl": "URL:",
    "usageHeaders": "Заголовках:",
    "usageBody": "Теле запроса:"
  },
  "HistoryPage": {
    "title": "История запросов",
    "description": "Просматривайте свои предыдущие запросы API и легко восстанавливайте их",
    "loadingFallback": "Загрузка истории запросов..."
  },
  "HistoryViewer": {
    "emptyTitle": "Вы еще не выполняли никаких запросов",
    "emptyDescription": "Здесь пусто. Попробуйте:",
    "restClientButton": "REST Клиент",
    "clearConfirmationPrompt": "Вы уверены? Это действие нельзя отменить.",
    "clearConfirmationYes": "Да, очистить все",
    "clearConfirmationCancel": "Отмена",
    "clearButton": "Очистить историю",
    "headersLabel": "Заголовки:"
  },
  "Footer": {
    "copyright": "© {year} REST Client",
    "builtWith": "Создано с помощью Next.js и TailwindCSS"
  }
}
